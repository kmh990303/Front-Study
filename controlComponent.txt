* React에서 상태 관리의 복잡성을 줄이기 위해 컴포넌트를 비제어(Uncontrolled) 컴포넌트로 사용할 수 있는 상황과, 제어(Control) 컴포넌트로 사용할 수 있는 상황을 비교하여 설명해주세요.

<제어 컴포넌트>
= > 제어 컴포넌트는 React에서 폼 요소의 값이 컴포넌트의 상태로 관리되는 컴포넌트이다. 폼 입력 요소의 값이 항상 컴포넌트의 상태와 동기화되며, 입력 값이 변경될 때마다 상태도 업데이트된다.

=> 폼 데이터 검증이 필요한 경우 : 입력 값을 실시간으로 확인하고, 데이터 유효성 검사를 수행할 때 유용하다

=> 복잡한 폼 관리 : 여러 입력 필드에서 발생하는 값의 변경을 단일 상태에서 관리해야 하는 복잡한 폼에서는 제어 컴포넌트가 더 작합하다.

=> 상태에 기반한 값 변경 : 외부 조건에 따라 입력 필드의 값을 동적으로 제어할 필요가 있는 경우


<비제어 컴포넌트>
=> 비제어 컴포넌트는 폼 요소의 값이 DOM에서 직접 관리되는 컴포넌트이다. React가 상태로 입력값을 제어하지 않고, 요소에 직접 접근하여 값을 읽는다. 주로 ref를 사용하여 값에 접근한다.

=> 상태를 사용하지 않기 때문에, 코드가 간단해질 수 있으며, 작은 폼 요소의 경우 쉽게 구현할 수 있다.

=> 간단한 폼 : 작은 폼에서 사용자 입력을 빠르게 받아 처리하는 경우, 비제어 컴포넌트로 쉽게 구현할 수 있다.

=> 상태관리를 최소화: 상태 관리가 복잡하지 않고, 값에 간단히 접근할 필요만 있을 때 사용된다.

=> 성능 최적화: 값이 자주 변하지 않거나 실시간 검증이 필요 없는 경우, 불필요한 리렌더링을 줄일 수 있다.


<정리>
=> 복잡한 폼에서는 제어 컴포넌트 사용 : 입력 값의 실시간 검증이 필요한 경우, 제어 컴포넌트를 사용하여 상태로 관리하는 것이 적절하다.

=> 간단한 폼에서는 비제어 컴포넌트 사용 : 복잡하지 않은 입력 필드의 경우 비제어 컴포넌트를 사용하여 구현을 간단히 하고, 필요한 경우에만 ref로 접근한다.